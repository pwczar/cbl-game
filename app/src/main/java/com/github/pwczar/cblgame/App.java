/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package com.github.pwczar.cblgame;

import java.awt.Graphics;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 * Main application class.
 */
public class App extends JPanel {
    JFrame frame;
    private Scene scene;

    // time between frames in miliseconds
    private long interval = (long) (1.0 / 60 * 1000);

    /**
     * Initialize App and create a window.
     */
    App() {
        frame = new JFrame("CBL Game");
        frame.add(this);

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(500, 800);
        // make the window appear at the center of the screen
        frame.setLocationRelativeTo(null);

        frame.setVisible(true);
    }

    /**
     * Change current scene.
     * @param scene scene
     */
    synchronized void setScene(Scene scene) {
        if (this.scene != null) {
            this.scene.stop();
        }

        this.scene = scene;
        this.scene.run();
    }

    /**
     * Redraw the game window.
     */
    public void paintComponent(Graphics g) {
        /*
        g.clearRect(0, 0, this.getWidth(), this.getHeight());
        for (Entity e : drawables) {
            e.draw(g);
        }
        */
        if (scene != null) {
            scene.draw(g);
        }
    }

    public static void main(String[] args) {
        App app = new App();
        app.setScene(new Game(app));

        // periodically update the scene in another thread
        new Thread() {
            public void run() {
                long time = System.currentTimeMillis();
                while (true) {
                    long now = System.currentTimeMillis();
                    // time between now and the last frame
                    double delta = (now - time) / 1000.0;
                    time = now;

                    if (app.scene != null) {
                        app.scene.update(delta);
                    }
                    app.updateUI();

                    try {
                        Thread.sleep(app.interval);
                    } catch (InterruptedException e) {
                        app.scene.stop();
                    }
                }
            }
        }.start();
    }
}
